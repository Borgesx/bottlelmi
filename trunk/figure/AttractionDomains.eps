%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
1 Setcolor
10 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
10 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[2999 901 3019 901 3039 901 3059 901 3079 901 3099 901 3120 901 3140 902 3160 902 3180 903 
3200 904 3220 905 3240 906 3260 907 3280 908 3300 910 3319 911 3339 913 3359 915 3379 917 
3399 919 3418 921 3438 923 3458 926 3477 928 3497 931 3516 933 3536 936 3555 939 3574 942 
3594 946 3613 949 3632 952 3651 956 3670 960 3689 963 3708 967 3727 971 3745 976 3764 980 
3783 984 3801 989 3819 993 3838 998 3856 1003 3874 1008 3892 1013 3910 1018 3928 1023 3946 1029 
3964 1034 3981 1040 3999 1046 4016 1051 4034 1057 4051 1063 4068 1070 4085 1076 4102 1082 4119 1089 
4135 1095 4152 1102 4168 1109 4185 1115 4201 1122 4217 1129 4233 1137 4249 1144 4264 1151 4280 1159 
4295 1166 4311 1174 4326 1182 4341 1189 4356 1197 4371 1205 4385 1214 4400 1222 4414 1230 4429 1238 
4443 1247 4457 1255 4470 1264 4484 1273 4498 1282 4511 1290 4524 1299 4537 1309 4550 1318 4563 1327 
4575 1336 4588 1346 4600 1355 4612 1365 4624 1374 4636 1384 4648 1394 4659 1403 4670 1413 4682 1423 
4693 1433 4703 1443 4714 1454 4724 1464 4735 1474 4745 1485 4755 1495 4765 1506 4774 1516 4783 1527 
4793 1537 4802 1548 4811 1559 4819 1570 4828 1581 4836 1592 4844 1603 4852 1614 4860 1625 4868 1636 
4875 1647 4882 1659 4889 1670 4896 1681 4903 1693 4909 1704 4915 1716 4921 1727 4927 1739 4933 1750 
4939 1762 4944 1774 4949 1785 4954 1797 4959 1809 4963 1821 4967 1832 4971 1844 4975 1856 4979 1868 
4983 1880 4986 1892 4989 1904 4992 1916 4995 1928 4997 1940 5000 1952 5002 1964 5004 1976 5005 1988 
5007 2001 5008 2013 5009 2025 5010 2037 5011 2049 5012 2061 5012 2074 5012 2086 5012 2098 5012 2110 
5011 2122 5011 2135 5010 2147 5009 2159 5007 2171 5006 2183 5004 2195 5002 2208 5000 2220 4998 2232 
4996 2244 4993 2256 4990 2268 4987 2280 4984 2292 4980 2305 4976 2317 4973 2329 4968 2341 4964 2353 
4960 2365 4955 2376 4950 2388 4945 2400 4940 2412 4935 2424 4929 2436 4923 2448 4917 2459 4911 2471 
4904 2483 4898 2494 4891 2506 4884 2517 4877 2529 4870 2540 4862 2552 4854 2563 4846 2574 4838 2586 
4830 2597 4822 2608 4813 2619 4804 2630 4795 2642 4786 2653 4777 2663 4767 2674 4757 2685 4748 2696 
4737 2707 4727 2717 4717 2728 4706 2738 4695 2749 4685 2759 4673 2770 4662 2780 4651 2790 4639 2800 
4627 2810 4616 2820 4603 2830 4591 2840 4579 2850 4566 2860 4554 2869 4541 2879 4528 2889 4515 2898 
4501 2907 4488 2917 4474 2926 4460 2935 4446 2944 4432 2953 4418 2962 4404 2971 4389 2979 4375 2988 
4360 2996 4345 3005 4330 3013 4315 3021 4300 3030 4284 3038 4269 3046 4253 3054 4237 3061 4221 3069 
4205 3077 4189 3084 4173 3092 4156 3099 4140 3106 4123 3113 4106 3120 4089 3127 4072 3134 4055 3141 
4038 3147 4021 3154 4004 3160 3986 3167 3968 3173 3951 3179 3933 3185 3915 3191 3897 3197 3879 3202 
3861 3208 3843 3213 3824 3219 3806 3224 3788 3229 3769 3234 3750 3239 3732 3244 3713 3248 3694 3253 
3675 3257 3656 3262 3637 3266 3618 3270 3599 3274 3580 3278 3560 3282 3541 3285 3521 3289 3502 3292 
3482 3296 3463 3299 3443 3302 3424 3305 3404 3308 3384 3310 3364 3313 3345 3315 3325 3318 3305 3320 
3285 3322 3265 3324 3245 3326 3225 3328 3205 3329 3185 3331 3165 3332 3145 3333 3125 3335 3105 3336 
3085 3337 3065 3337 3045 3338 3024 3339 3004 3339 2984 3339 2964 3339 2944 3339 2924 3339 2904 3339 
2884 3339 2864 3338 2844 3338 2823 3337 2803 3336 2783 3335 2763 3334 2743 3333 2724 3332 2704 3331 
2684 3329 2664 3327 2644 3326 2624 3324 2604 3322 2585 3320 2565 3317 2545 3315 2526 3312 2506 3310 
2487 3307 2467 3304 2448 3301 2429 3298 2410 3295 2390 3292 2371 3288 2352 3285 2333 3281 2314 3277 
2295 3273 2276 3269 2258 3265 2239 3261 2220 3256 2202 3252 2183 3247 2165 3243 2147 3238 2129 3233 
2111 3228 2093 3223 2075 3217 2057 3212 2039 3207 2021 3201 2004 3195 1987 3190 1969 3184 1952 3178 
1935 3171 1918 3165 1901 3159 1884 3152 1867 3146 1851 3139 1834 3133 1818 3126 1802 3119 1786 3112 
1770 3105 1754 3097 1738 3090 1723 3083 1707 3075 1692 3067 1676 3060 1661 3052 1646 3044 1632 3036 
1617 3028 1602 3020 1588 3011 1574 3003 1560 2995 1546 2986 1532 2977 1518 2969 1505 2960 1491 2951 
1478 2942 1465 2933 1452 2924 1439 2915 1427 2905 1414 2896 1402 2886 1390 2877 1378 2867 1366 2858 
1354 2848 1343 2838 1331 2828 1320 2818 1309 2808 1298 2798 1288 2788 1277 2778 1267 2767 1257 2757 
1247 2747 1237 2736 1227 2726 1218 2715 1209 2704 1200 2694 1191 2683 1182 2672 1174 2661 1165 2650 
1157 2639 1149 2628 1141 2617 1134 2606 1126 2595 1119 2583 1112 2572 1105 2561 1098 2549 1092 2538 
1086 2526 1079 2515 1074 2503 1068 2492 1062 2480 1057 2468 1052 2457 1047 2445 1042 2433 1038 2421 
1033 2409 1029 2398 1025 2386 1021 2374 1018 2362 1015 2350 1011 2338 1008 2326 1006 2314 1003 2302 
1001 2290 999 2278 997 2266 995 2253 993 2241 992 2229 991 2217 990 2205 989 2193 988 2181 
988 2168 988 2156 988 2144 988 2132 989 2120 989 2107 990 2095 991 2083 992 2071 994 2059 
995 2046 997 2034 999 2022 1002 2010 1004 1998 1007 1986 1010 1974 1013 1962 1016 1949 1019 1937 
1023 1925 1027 1913 1031 1901 1035 1889 1040 1877 1044 1865 1049 1854 1054 1842 1059 1830 1065 1818 
1070 1806 1076 1794 1082 1783 1088 1771 1095 1759 1101 1748 1108 1736 1115 1724 1122 1713 1129 1701 
1137 1690 1144 1679 1152 1667 1160 1656 1169 1645 1177 1634 1186 1622 1194 1611 1203 1600 1213 1589 
1222 1578 1231 1567 1241 1557 1251 1546 1261 1535 1271 1524 1282 1514 1292 1503 1303 1493 1314 1482 
1325 1472 1336 1462 1347 1451 1359 1441 1371 1431 1383 1421 1395 1411 1407 1401 1419 1391 1432 1382 
1444 1372 1457 1362 1470 1353 1483 1343 1497 1334 1510 1325 1524 1316 1537 1307 1551 1297 1565 1288 
1580 1280 1594 1271 1608 1262 1623 1253 1638 1245 1653 1237 1668 1228 1683 1220 1698 1212 1713 1204 
1729 1196 1745 1188 1760 1180 1776 1172 1792 1165 1808 1157 1825 1150 1841 1142 1858 1135 1874 1128 
1891 1121 1908 1114 1925 1107 1942 1100 1959 1094 1976 1087 1994 1081 2011 1074 2029 1068 2046 1062 
2064 1056 2082 1050 2100 1044 2118 1039 2136 1033 2154 1028 2173 1022 2191 1017 2210 1012 2228 1007 
2247 1002 2265 997 2284 992 2303 988 2322 983 2341 979 2360 975 2379 971 2398 967 2417 963 
2437 959 2456 955 2475 952 2495 948 2514 945 2534 942 2554 939 2573 936 2593 933 2613 930 
2632 927 2652 925 2672 923 2692 920 2712 918 2732 916 2752 914 2772 913 2792 911 2812 909 
2832 908 2852 907 2872 906 2892 905 2912 904 2932 903 2952 902 2972 902 2992 901 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[2999 836 3020 836 3041 836 3062 836 3084 836 3105 836 3126 836 3147 837 3168 837 3189 838 
3210 839 3231 840 3253 841 3274 842 3295 844 3316 845 3336 847 3357 849 3378 851 3399 853 
3420 855 3441 857 3461 859 3482 862 3503 865 3523 867 3544 870 3564 873 3585 876 3605 880 
3625 883 3645 887 3666 890 3686 894 3706 898 3726 902 3745 906 3765 910 3785 915 3805 919 
3824 924 3844 929 3863 933 3882 938 3902 944 3921 949 3940 954 3959 959 3978 965 3996 971 
4015 977 4034 982 4052 988 4070 995 4089 1001 4107 1007 4125 1014 4143 1020 4160 1027 4178 1034 
4196 1041 4213 1048 4230 1055 4248 1062 4265 1069 4282 1077 4298 1084 4315 1092 4332 1100 4348 1108 
4364 1115 4380 1124 4396 1132 4412 1140 4428 1148 4444 1157 4459 1165 4474 1174 4490 1183 4505 1191 
4519 1200 4534 1209 4549 1218 4563 1228 4577 1237 4591 1246 4605 1256 4619 1265 4633 1275 4646 1285 
4659 1294 4672 1304 4685 1314 4698 1324 4711 1334 4723 1345 4735 1355 4747 1365 4759 1376 4771 1386 
4783 1397 4794 1407 4805 1418 4816 1429 4827 1440 4838 1451 4848 1462 4858 1473 4868 1484 4878 1495 
4888 1506 4898 1518 4907 1529 4916 1541 4925 1552 4934 1564 4942 1575 4951 1587 4959 1599 4967 1610 
4975 1622 4982 1634 4990 1646 4997 1658 5004 1670 5011 1682 5017 1694 5024 1706 5030 1718 5036 1731 
5042 1743 5047 1755 5053 1767 5058 1780 5063 1792 5067 1805 5072 1817 5076 1830 5081 1842 5084 1855 
5088 1867 5092 1880 5095 1892 5098 1905 5101 1918 5104 1930 5106 1943 5108 1956 5110 1969 5112 1981 
5114 1994 5115 2007 5116 2020 5117 2033 5118 2045 5119 2058 5119 2071 5119 2084 5119 2097 5119 2110 
5118 2122 5118 2135 5117 2148 5116 2161 5114 2174 5113 2187 5111 2199 5109 2212 5107 2225 5104 2238 
5102 2251 5099 2263 5096 2276 5093 2289 5089 2302 5085 2314 5082 2327 5078 2340 5073 2352 5069 2365 
5064 2378 5059 2390 5054 2403 5049 2415 5043 2428 5037 2440 5032 2453 5025 2465 5019 2477 5013 2490 
5006 2502 4999 2514 4992 2526 4984 2538 4977 2551 4969 2563 4961 2575 4953 2587 4945 2599 4936 2611 
4927 2622 4919 2634 4909 2646 4900 2658 4891 2669 4881 2681 4871 2692 4861 2704 4851 2715 4841 2727 
4830 2738 4819 2749 4808 2760 4797 2771 4786 2782 4774 2793 4763 2804 4751 2815 4739 2826 4726 2837 
4714 2847 4702 2858 4689 2868 4676 2879 4663 2889 4650 2899 4636 2909 4623 2919 4609 2929 4595 2939 
4581 2949 4567 2959 4553 2969 4538 2978 4523 2988 4509 2997 4494 3007 4479 3016 4463 3025 4448 3034 
4432 3043 4417 3052 4401 3061 4385 3069 4369 3078 4352 3087 4336 3095 4320 3103 4303 3111 4286 3120 
4269 3128 4252 3135 4235 3143 4218 3151 4200 3159 4183 3166 4165 3174 4147 3181 4130 3188 4112 3195 
4093 3202 4075 3209 4057 3216 4039 3222 4020 3229 4001 3235 3983 3242 3964 3248 3945 3254 3926 3260 
3907 3266 3888 3271 3868 3277 3849 3283 3829 3288 3810 3293 3790 3298 3771 3304 3751 3308 3731 3313 
3711 3318 3691 3323 3671 3327 3651 3331 3631 3335 3610 3340 3590 3344 3570 3347 3549 3351 3529 3355 
3508 3358 3488 3362 3467 3365 3446 3368 3425 3371 3405 3374 3384 3376 3363 3379 3342 3381 3321 3384 
3300 3386 3279 3388 3258 3390 3237 3392 3216 3394 3195 3395 3174 3397 3153 3398 3132 3399 3110 3400 
3089 3401 3068 3402 3047 3403 3026 3403 3005 3404 2983 3404 2962 3404 2941 3404 2920 3404 2899 3404 
2877 3404 2856 3403 2835 3403 2814 3402 2793 3401 2772 3400 2751 3399 2730 3398 2709 3396 2688 3395 
2667 3393 2646 3392 2625 3390 2604 3388 2583 3386 2563 3383 2542 3381 2521 3378 2501 3376 2480 3373 
2460 3370 2439 3367 2419 3364 2398 3361 2378 3357 2358 3354 2338 3350 2318 3347 2298 3343 2278 3339 
2258 3335 2238 3330 2218 3326 2199 3321 2179 3317 2159 3312 2140 3307 2121 3302 2101 3297 2082 3292 
2063 3287 2044 3281 2025 3276 2007 3270 1988 3264 1969 3259 1951 3253 1933 3246 1914 3240 1896 3234 
1878 3227 1860 3221 1842 3214 1825 3207 1807 3201 1790 3194 1772 3186 1755 3179 1738 3172 1721 3164 
1704 3157 1688 3149 1671 3142 1655 3134 1638 3126 1622 3118 1606 3110 1590 3101 1574 3093 1559 3085 
1543 3076 1528 3067 1513 3059 1498 3050 1483 3041 1468 3032 1454 3023 1439 3014 1425 3005 1411 2995 
1397 2986 1383 2976 1370 2967 1356 2957 1343 2947 1330 2937 1317 2927 1304 2917 1291 2907 1279 2897 
1267 2887 1254 2876 1243 2866 1231 2855 1219 2845 1208 2834 1197 2824 1186 2813 1175 2802 1164 2791 
1154 2780 1143 2769 1133 2758 1123 2747 1113 2735 1104 2724 1095 2713 1085 2701 1076 2690 1068 2678 
1059 2667 1051 2655 1042 2643 1034 2632 1026 2620 1019 2608 1011 2596 1004 2584 997 2572 990 2560 
984 2548 977 2536 971 2524 965 2511 959 2499 954 2487 948 2475 943 2462 938 2450 933 2437 
929 2425 924 2412 920 2400 916 2387 912 2375 909 2362 906 2350 902 2337 900 2324 897 2312 
894 2299 892 2286 890 2273 888 2261 886 2248 885 2235 884 2222 883 2209 882 2197 881 2184 
881 2171 881 2158 881 2145 881 2132 882 2120 882 2107 883 2094 884 2081 886 2068 887 2055 
889 2043 891 2030 893 2017 895 2004 898 1991 901 1979 904 1966 907 1953 910 1940 914 1928 
918 1915 922 1902 926 1890 931 1877 935 1864 940 1852 945 1839 950 1827 956 1814 962 1802 
968 1789 974 1777 980 1765 986 1752 993 1740 1000 1728 1007 1716 1014 1703 1022 1691 1030 1679 
1038 1667 1046 1655 1054 1643 1062 1631 1071 1619 1080 1608 1089 1596 1098 1584 1108 1573 1117 1561 
1127 1549 1137 1538 1147 1527 1158 1515 1168 1504 1179 1493 1190 1481 1201 1470 1212 1459 1224 1448 
1236 1437 1247 1427 1259 1416 1272 1405 1284 1394 1296 1384 1309 1373 1322 1363 1335 1353 1348 1342 
1362 1332 1375 1322 1389 1312 1403 1302 1417 1292 1431 1283 1445 1273 1460 1263 1474 1254 1489 1244 
1504 1235 1519 1226 1534 1216 1550 1207 1565 1198 1581 1189 1597 1181 1613 1172 1629 1163 1645 1155 
1661 1146 1678 1138 1694 1130 1711 1122 1728 1114 1745 1106 1762 1098 1779 1090 1797 1083 1814 1075 
1832 1068 1850 1060 1868 1053 1886 1046 1904 1039 1922 1032 1940 1025 1959 1019 1977 1012 1996 1006 
2014 999 2033 993 2052 987 2071 981 2090 975 2109 969 2129 964 2148 958 2167 953 2187 948 
2207 942 2226 937 2246 932 2266 928 2286 923 2306 918 2326 914 2346 909 2366 905 2386 901 
2407 897 2427 893 2448 889 2468 886 2489 882 2509 879 2530 876 2550 873 2571 870 2592 867 
2613 864 2634 861 2655 859 2675 857 2696 854 2717 852 2738 850 2759 848 2781 847 2802 845 
2823 844 2844 842 2865 841 2886 840 2907 839 2929 838 2950 837 2971 837 2992 836 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[2999 898 3019 897 3039 897 3059 897 3079 897 3099 897 3119 897 3139 898 3159 898 3179 899 
3199 899 3219 900 3239 901 3259 902 3279 904 3299 905 3319 906 3339 908 3359 910 3379 912 
3398 913 3418 916 3438 918 3457 920 3477 922 3496 925 3516 928 3535 930 3555 933 3574 936 
3593 940 3612 943 3632 946 3651 950 3670 953 3689 957 3707 961 3726 965 3745 969 3764 973 
3782 977 3801 982 3819 986 3837 991 3856 996 3874 1001 3892 1006 3910 1011 3928 1016 3946 1021 
3963 1027 3981 1032 3998 1038 4016 1044 4033 1049 4050 1055 4067 1061 4084 1068 4101 1074 4118 1080 
4135 1087 4151 1093 4168 1100 4184 1107 4200 1114 4216 1121 4232 1128 4248 1135 4264 1142 4280 1150 
4295 1157 4310 1165 4326 1173 4341 1180 4356 1188 4370 1196 4385 1204 4400 1212 4414 1221 4428 1229 
4442 1237 4456 1246 4470 1255 4484 1263 4497 1272 4511 1281 4524 1290 4537 1299 4550 1308 4563 1317 
4575 1326 4588 1336 4600 1345 4612 1355 4624 1364 4636 1374 4647 1384 4659 1393 4670 1403 4681 1413 
4692 1423 4703 1433 4714 1444 4724 1454 4734 1464 4744 1474 4754 1485 4764 1495 4774 1506 4783 1516 
4792 1527 4801 1538 4810 1549 4819 1560 4828 1570 4836 1581 4844 1592 4852 1603 4860 1615 4867 1626 
4875 1637 4882 1648 4889 1659 4896 1671 4902 1682 4909 1694 4915 1705 4921 1717 4927 1728 4933 1740 
4938 1752 4944 1763 4949 1775 4954 1787 4958 1798 4963 1810 4967 1822 4971 1834 4975 1846 4979 1858 
4982 1870 4986 1882 4989 1894 4992 1906 4995 1918 4997 1930 4999 1942 5002 1954 5004 1966 5005 1978 
5007 1991 5008 2003 5009 2015 5010 2027 5011 2039 5011 2051 5012 2064 5012 2076 5012 2088 5012 2100 
5011 2113 5010 2125 5010 2137 5009 2149 5007 2162 5006 2174 5004 2186 5002 2198 5000 2210 4998 2223 
4995 2235 4993 2247 4990 2259 4987 2271 4983 2283 4980 2295 4976 2308 4972 2320 4968 2332 4964 2344 
4960 2356 4955 2368 4950 2380 4945 2392 4940 2404 4934 2415 4929 2427 4923 2439 4917 2451 4911 2463 
4904 2474 4898 2486 4891 2498 4884 2509 4877 2521 4870 2532 4862 2544 4854 2555 4846 2567 4838 2578 
4830 2589 4822 2601 4813 2612 4804 2623 4795 2634 4786 2645 4777 2656 4767 2667 4757 2678 4748 2689 
4737 2700 4727 2711 4717 2721 4706 2732 4696 2742 4685 2753 4674 2763 4662 2774 4651 2784 4639 2794 
4628 2804 4616 2815 4604 2825 4591 2835 4579 2844 4566 2854 4554 2864 4541 2874 4528 2883 4515 2893 
4501 2902 4488 2912 4474 2921 4460 2930 4447 2939 4432 2948 4418 2957 4404 2966 4389 2975 4375 2984 
4360 2992 4345 3001 4330 3009 4315 3018 4300 3026 4284 3034 4269 3042 4253 3050 4237 3058 4221 3066 
4205 3073 4189 3081 4173 3089 4156 3096 4140 3103 4123 3111 4106 3118 4090 3125 4073 3132 4056 3138 
4038 3145 4021 3152 4004 3158 3986 3165 3969 3171 3951 3177 3933 3183 3915 3189 3897 3195 3879 3201 
3861 3207 3843 3212 3825 3218 3806 3223 3788 3228 3769 3233 3751 3238 3732 3243 3713 3248 3694 3253 
3675 3257 3656 3262 3637 3266 3618 3270 3599 3274 3580 3278 3560 3282 3541 3286 3522 3290 3502 3293 
3483 3297 3463 3300 3444 3303 3424 3306 3404 3309 3385 3312 3365 3314 3345 3317 3325 3319 3305 3322 
3285 3324 3265 3326 3245 3328 3226 3330 3205 3332 3185 3333 3165 3335 3145 3336 3125 3337 3105 3338 
3085 3339 3065 3340 3045 3341 3025 3342 3005 3342 2985 3343 2964 3343 2944 3343 2924 3343 2904 3343 
2884 3343 2864 3342 2844 3342 2824 3341 2804 3341 2784 3340 2764 3339 2744 3338 2724 3337 2704 3335 
2684 3334 2664 3332 2644 3331 2625 3329 2605 3327 2585 3325 2565 3323 2546 3320 2526 3318 2507 3315 
2487 3313 2468 3310 2448 3307 2429 3304 2410 3301 2391 3298 2372 3294 2352 3291 2333 3287 2314 3284 
2296 3280 2277 3276 2258 3272 2239 3268 2221 3263 2202 3259 2184 3254 2166 3250 2147 3245 2129 3240 
2111 3235 2093 3230 2075 3225 2057 3220 2040 3214 2022 3209 2004 3203 1987 3197 1970 3191 1952 3186 
1935 3179 1918 3173 1901 3167 1885 3161 1868 3154 1851 3148 1835 3141 1818 3134 1802 3127 1786 3120 
1770 3113 1754 3106 1739 3099 1723 3091 1707 3084 1692 3076 1677 3069 1662 3061 1647 3053 1632 3045 
1617 3037 1603 3029 1588 3021 1574 3012 1560 3004 1546 2995 1532 2987 1518 2978 1505 2969 1492 2961 
1478 2952 1465 2943 1452 2933 1440 2924 1427 2915 1414 2906 1402 2896 1390 2887 1378 2877 1366 2868 
1354 2858 1343 2848 1332 2838 1321 2828 1310 2818 1299 2808 1288 2798 1278 2788 1267 2778 1257 2767 
1247 2757 1237 2746 1228 2736 1218 2725 1209 2715 1200 2704 1191 2693 1182 2682 1174 2671 1165 2660 
1157 2649 1149 2638 1142 2627 1134 2616 1126 2605 1119 2594 1112 2582 1105 2571 1099 2560 1092 2548 
1086 2537 1080 2525 1074 2514 1068 2502 1063 2490 1057 2479 1052 2467 1047 2455 1042 2443 1038 2432 
1034 2420 1029 2408 1025 2396 1022 2384 1018 2372 1015 2360 1012 2348 1009 2336 1006 2324 1003 2312 
1001 2300 999 2288 997 2276 995 2264 993 2251 992 2239 991 2227 990 2215 989 2203 989 2190 
988 2178 988 2166 988 2154 988 2142 989 2129 989 2117 990 2105 991 2093 993 2080 994 2068 
996 2056 997 2044 1000 2032 1002 2019 1004 2007 1007 1995 1010 1983 1013 1971 1016 1959 1019 1946 
1023 1934 1027 1922 1031 1910 1035 1898 1040 1886 1044 1874 1049 1862 1054 1850 1059 1838 1065 1826 
1070 1815 1076 1803 1082 1791 1088 1779 1095 1767 1101 1756 1108 1744 1115 1733 1122 1721 1129 1709 
1137 1698 1144 1686 1152 1675 1160 1664 1169 1652 1177 1641 1186 1630 1194 1619 1203 1608 1213 1596 
1222 1585 1231 1574 1241 1564 1251 1553 1261 1542 1271 1531 1281 1520 1292 1510 1303 1499 1314 1489 
1325 1478 1336 1468 1347 1458 1359 1447 1371 1437 1382 1427 1395 1417 1407 1407 1419 1397 1432 1387 
1444 1378 1457 1368 1470 1358 1483 1349 1497 1339 1510 1330 1524 1321 1537 1311 1551 1302 1565 1293 
1579 1284 1594 1275 1608 1266 1623 1258 1638 1249 1652 1241 1667 1232 1683 1224 1698 1216 1713 1207 
1729 1199 1744 1191 1760 1183 1776 1175 1792 1168 1808 1160 1825 1153 1841 1145 1857 1138 1874 1131 
1891 1123 1908 1116 1925 1109 1942 1103 1959 1096 1976 1089 1993 1083 2011 1076 2029 1070 2046 1064 
2064 1058 2082 1052 2100 1046 2118 1040 2136 1034 2154 1029 2172 1023 2191 1018 2209 1013 2228 1007 
2246 1002 2265 998 2284 993 2303 988 2322 983 2341 979 2360 975 2379 970 2398 966 2417 962 
2436 958 2456 955 2475 951 2495 947 2514 944 2534 941 2553 938 2573 934 2593 932 2612 929 
2632 926 2652 923 2672 921 2692 919 2711 916 2731 914 2751 912 2771 910 2791 909 2811 907 
2831 905 2851 904 2872 903 2892 902 2912 901 2932 900 2952 899 2972 898 2992 898 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
4 Setcolor
10 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
4 Setcolor
10 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[2999 1186 3014 1185 3030 1185 3045 1185 3060 1185 3076 1185 3091 1185 3106 1186 3122 1186 3137 1187 
3152 1187 3168 1188 3183 1189 3198 1189 3213 1190 3229 1191 3244 1192 3259 1194 3274 1195 3289 1196 
3304 1198 3319 1199 3335 1201 3349 1203 3364 1205 3379 1207 3394 1209 3409 1211 3424 1213 3439 1215 
3453 1218 3468 1220 3483 1223 3497 1225 3512 1228 3526 1231 3541 1234 3555 1237 3569 1240 3584 1243 
3598 1247 3612 1250 3626 1254 3640 1257 3654 1261 3668 1264 3682 1268 3695 1272 3709 1276 3723 1280 
3736 1284 3750 1289 3763 1293 3776 1297 3790 1302 3803 1306 3816 1311 3829 1316 3842 1320 3855 1325 
3867 1330 3880 1335 3893 1341 3905 1346 3917 1351 3930 1356 3942 1362 3954 1367 3966 1373 3978 1379 
3990 1384 4002 1390 4013 1396 4025 1402 4036 1408 4047 1414 4059 1420 4070 1426 4081 1433 4092 1439 
4102 1445 4113 1452 4124 1459 4134 1465 4144 1472 4155 1479 4165 1486 4175 1492 4185 1499 4194 1506 
4204 1513 4213 1521 4223 1528 4232 1535 4241 1542 4250 1550 4259 1557 4268 1565 4276 1572 4285 1580 
4293 1588 4302 1595 4310 1603 4318 1611 4326 1619 4333 1627 4341 1635 4348 1643 4356 1651 4363 1659 
4370 1667 4377 1675 4384 1683 4390 1692 4397 1700 4403 1708 4409 1717 4415 1725 4421 1734 4427 1742 
4433 1751 4438 1759 4444 1768 4449 1777 4454 1785 4459 1794 4464 1803 4468 1812 4473 1821 4477 1829 
4481 1838 4485 1847 4489 1856 4493 1865 4497 1874 4500 1883 4504 1892 4507 1901 4510 1910 4513 1920 
4515 1929 4518 1938 4520 1947 4522 1956 4524 1965 4526 1975 4528 1984 4530 1993 4531 2002 4533 2012 
4534 2021 4535 2030 4536 2040 4536 2049 4537 2058 4537 2068 4538 2077 4538 2086 4538 2096 4538 2105 
4537 2114 4537 2124 4536 2133 4535 2142 4534 2152 4533 2161 4532 2170 4530 2180 4529 2189 4527 2198 
4525 2208 4523 2217 4521 2226 4519 2236 4516 2245 4513 2254 4511 2263 4508 2273 4504 2282 4501 2291 
4498 2300 4494 2309 4491 2318 4487 2328 4483 2337 4479 2346 4474 2355 4470 2364 4465 2373 4460 2382 
4456 2391 4451 2400 4445 2409 4440 2418 4435 2426 4429 2435 4423 2444 4417 2453 4411 2461 4405 2470 
4399 2479 4392 2487 4386 2496 4379 2505 4372 2513 4365 2522 4358 2530 4351 2538 4343 2547 4336 2555 
4328 2563 4320 2571 4312 2580 4304 2588 4296 2596 4288 2604 4279 2612 4270 2620 4262 2628 4253 2635 
4244 2643 4235 2651 4226 2659 4216 2666 4207 2674 4197 2681 4187 2689 4178 2696 4168 2703 4158 2711 
4147 2718 4137 2725 4127 2732 4116 2739 4106 2746 4095 2753 4084 2760 4073 2767 4062 2773 4051 2780 
4040 2787 4028 2793 4017 2800 4005 2806 3993 2812 3982 2819 3970 2825 3958 2831 3946 2837 3933 2843 
3921 2849 3909 2855 3896 2860 3884 2866 3871 2872 3859 2877 3846 2883 3833 2888 3820 2893 3807 2898 
3794 2904 3780 2909 3767 2914 3754 2918 3740 2923 3727 2928 3713 2933 3700 2937 3686 2942 3672 2946 
3658 2951 3644 2955 3630 2959 3616 2963 3602 2967 3588 2971 3574 2975 3559 2979 3545 2982 3531 2986 
3516 2989 3502 2993 3487 2996 3473 2999 3458 3002 3443 3005 3428 3008 3414 3011 3399 3014 3384 3017 
3369 3019 3354 3022 3339 3024 3324 3026 3309 3029 3294 3031 3279 3033 3264 3035 3249 3037 3233 3039 
3218 3040 3203 3042 3188 3043 3172 3045 3157 3046 3142 3047 3126 3048 3111 3049 3096 3050 3080 3051 
3065 3052 3050 3053 3034 3053 3019 3054 3004 3054 2988 3054 2973 3055 2957 3055 2942 3055 2927 3055 
2911 3055 2896 3054 2881 3054 2865 3053 2850 3053 2835 3052 2819 3052 2804 3051 2789 3050 2774 3049 
2759 3048 2743 3047 2728 3045 2713 3044 2698 3042 2683 3041 2668 3039 2653 3037 2638 3036 2623 3034 
2608 3032 2593 3030 2578 3027 2564 3025 2549 3023 2534 3020 2520 3018 2505 3015 2491 3012 2476 3009 
2462 3006 2447 3003 2433 3000 2419 2997 2404 2994 2390 2990 2376 2987 2362 2983 2348 2980 2334 2976 
2321 2972 2307 2968 2293 2965 2279 2960 2266 2956 2252 2952 2239 2948 2226 2943 2212 2939 2199 2934 
2186 2930 2173 2925 2160 2920 2147 2915 2135 2910 2122 2905 2109 2900 2097 2895 2085 2890 2072 2885 
2060 2879 2048 2874 2036 2868 2024 2862 2012 2857 2000 2851 1989 2845 1977 2839 1966 2833 1954 2827 
1943 2821 1932 2815 1921 2808 1910 2802 1899 2796 1889 2789 1878 2782 1868 2776 1857 2769 1847 2762 
1837 2756 1827 2749 1817 2742 1807 2735 1798 2728 1788 2721 1779 2713 1769 2706 1760 2699 1751 2691 
1742 2684 1734 2676 1725 2669 1716 2661 1708 2654 1700 2646 1692 2638 1684 2630 1676 2623 1668 2615 
1660 2607 1653 2599 1645 2591 1638 2583 1631 2574 1624 2566 1617 2558 1611 2550 1604 2541 1598 2533 
1592 2525 1585 2516 1580 2508 1574 2499 1568 2491 1562 2482 1557 2473 1552 2465 1547 2456 1542 2447 
1537 2438 1532 2430 1528 2421 1523 2412 1519 2403 1515 2394 1511 2385 1507 2376 1504 2367 1500 2358 
1497 2349 1494 2340 1491 2331 1488 2322 1485 2313 1483 2304 1480 2294 1478 2285 1476 2276 1474 2267 
1472 2258 1470 2248 1469 2239 1468 2230 1466 2220 1465 2211 1464 2202 1464 2193 1463 2183 1463 2174 
1462 2165 1462 2155 1462 2146 1462 2136 1463 2127 1463 2118 1464 2108 1465 2099 1466 2090 1467 2080 
1468 2071 1469 2062 1471 2052 1473 2043 1475 2034 1477 2024 1479 2015 1481 2006 1484 1997 1486 1987 
1489 1978 1492 1969 1495 1960 1498 1950 1502 1941 1505 1932 1509 1923 1513 1914 1517 1905 1521 1896 
1525 1887 1529 1878 1534 1869 1539 1860 1544 1851 1549 1842 1554 1833 1559 1824 1565 1815 1570 1806 
1576 1797 1582 1789 1588 1780 1594 1771 1600 1763 1607 1754 1613 1745 1620 1737 1627 1728 1634 1720 
1641 1711 1648 1703 1656 1695 1663 1686 1671 1678 1679 1670 1687 1662 1695 1654 1703 1646 1711 1637 
1720 1629 1728 1622 1737 1614 1746 1606 1755 1598 1764 1590 1773 1583 1782 1575 1792 1567 1801 1560 
1811 1553 1821 1545 1831 1538 1841 1530 1851 1523 1861 1516 1872 1509 1882 1502 1893 1495 1903 1488 
1914 1481 1925 1474 1936 1468 1947 1461 1959 1454 1970 1448 1982 1441 1993 1435 2005 1429 2017 1422 
2028 1416 2040 1410 2052 1404 2065 1398 2077 1392 2089 1386 2102 1381 2114 1375 2127 1369 2139 1364 
2152 1358 2165 1353 2178 1348 2191 1342 2204 1337 2217 1332 2231 1327 2244 1322 2257 1317 2271 1313 
2285 1308 2298 1303 2312 1299 2326 1294 2340 1290 2353 1286 2367 1282 2382 1278 2396 1274 2410 1270 
2424 1266 2438 1262 2453 1258 2467 1255 2482 1251 2496 1248 2511 1245 2525 1241 2540 1238 2555 1235 
2569 1232 2584 1229 2599 1227 2614 1224 2629 1221 2644 1219 2659 1216 2674 1214 2689 1212 2704 1209 
2719 1207 2734 1205 2749 1204 2764 1202 2779 1200 2795 1198 2810 1197 2825 1195 2840 1194 2856 1193 
2871 1192 2886 1191 2902 1190 2917 1189 2932 1188 2948 1187 2963 1187 2979 1186 2994 1186 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
2 Setcolor
15 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
2 Setcolor
15 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[2997 1190 3012 1189 3028 1188 3043 1187 3058 1187 3074 1186 3089 1186 3105 1185 3120 1185 3135 1185 
3151 1185 3166 1185 3181 1185 3197 1185 3212 1185 3227 1186 3242 1186 3257 1187 3273 1188 3288 1188 
3303 1189 3318 1190 3333 1191 3348 1192 3363 1194 3378 1195 3393 1196 3408 1198 3423 1199 3437 1201 
3452 1203 3467 1205 3482 1207 3496 1209 3511 1211 3525 1213 3540 1216 3554 1218 3568 1220 3583 1223 
3597 1226 3611 1229 3625 1231 3639 1234 3653 1237 3667 1241 3681 1244 3695 1247 3708 1251 3722 1254 
3736 1258 3749 1261 3763 1265 3776 1269 3789 1273 3802 1277 3816 1281 3829 1285 3842 1289 3854 1294 
3867 1298 3880 1303 3892 1307 3905 1312 3917 1317 3930 1321 3942 1326 3954 1331 3966 1336 3978 1342 
3990 1347 4002 1352 4013 1357 4025 1363 4036 1368 4048 1374 4059 1380 4070 1385 4081 1391 4092 1397 
4103 1403 4114 1409 4124 1415 4135 1421 4145 1428 4155 1434 4165 1440 4175 1447 4185 1453 4195 1460 
4205 1467 4214 1473 4224 1480 4233 1487 4242 1494 4251 1501 4260 1508 4269 1515 4278 1522 4286 1530 
4295 1537 4303 1544 4311 1552 4319 1559 4327 1566 4335 1574 4342 1582 4350 1589 4357 1597 4364 1605 
4371 1613 4378 1621 4385 1629 4392 1636 4398 1645 4405 1653 4411 1661 4417 1669 4423 1677 4429 1685 
4435 1694 4440 1702 4446 1710 4451 1719 4456 1727 4461 1736 4466 1744 4470 1753 4475 1762 4479 1770 
4483 1779 4488 1788 4491 1796 4495 1805 4499 1814 4502 1823 4506 1832 4509 1841 4512 1850 4515 1859 
4517 1868 4520 1877 4522 1886 4525 1895 4527 1904 4529 1913 4531 1922 4532 1931 4534 1940 4535 1950 
4536 1959 4537 1968 4538 1977 4539 1986 4540 1996 4540 2005 4540 2014 4540 2024 4540 2033 4540 2042 
4540 2052 4539 2061 4539 2070 4538 2080 4537 2089 4536 2098 4535 2108 4533 2117 4532 2126 4530 2136 
4528 2145 4526 2154 4524 2164 4521 2173 4519 2182 4516 2192 4514 2201 4511 2210 4508 2220 4504 2229 
4501 2238 4497 2247 4494 2257 4490 2266 4486 2275 4482 2284 4477 2294 4473 2303 4468 2312 4464 2321 
4459 2330 4454 2339 4449 2348 4443 2357 4438 2367 4432 2376 4426 2385 4421 2393 4415 2402 4408 2411 
4402 2420 4396 2429 4389 2438 4382 2447 4375 2455 4368 2464 4361 2473 4354 2481 4347 2490 4339 2499 
4331 2507 4324 2516 4316 2524 4308 2532 4299 2541 4291 2549 4282 2557 4274 2566 4265 2574 4256 2582 
4247 2590 4238 2598 4229 2606 4220 2614 4210 2622 4201 2630 4191 2638 4181 2646 4171 2653 4161 2661 
4151 2669 4141 2676 4130 2684 4120 2691 4109 2698 4098 2706 4087 2713 4076 2720 4065 2727 4054 2734 
4043 2741 4031 2748 4020 2755 4008 2762 3997 2769 3985 2776 3973 2782 3961 2789 3949 2795 3937 2802 
3924 2808 3912 2814 3900 2821 3887 2827 3874 2833 3862 2839 3849 2845 3836 2851 3823 2857 3810 2862 
3797 2868 3784 2873 3770 2879 3757 2884 3744 2890 3730 2895 3716 2900 3703 2905 3689 2910 3675 2915 
3661 2920 3647 2925 3633 2930 3619 2934 3605 2939 3591 2943 3577 2948 3562 2952 3548 2956 3534 2961 
3519 2965 3505 2969 3490 2972 3475 2976 3461 2980 3446 2984 3431 2987 3416 2991 3401 2994 3387 2997 
3372 3000 3357 3004 3342 3007 3327 3010 3312 3012 3296 3015 3281 3018 3266 3020 3251 3023 3236 3025 
3221 3028 3205 3030 3190 3032 3175 3034 3159 3036 3144 3038 3129 3039 3113 3041 3098 3043 3083 3044 
3067 3046 3052 3047 3036 3048 3021 3049 3006 3050 2990 3051 2975 3052 2959 3053 2944 3053 2929 3054 
2913 3054 2898 3055 2883 3055 2867 3055 2852 3055 2837 3055 2821 3055 2806 3055 2791 3055 2775 3054 
2760 3054 2745 3053 2730 3053 2715 3052 2700 3051 2684 3050 2669 3049 2654 3048 2639 3047 2624 3045 
2609 3044 2595 3042 2580 3041 2565 3039 2550 3037 2535 3036 2521 3034 2506 3032 2492 3029 2477 3027 
2463 3025 2448 3022 2434 3020 2420 3017 2405 3015 2391 3012 2377 3009 2363 3006 2349 3003 2335 3000 
2321 2997 2307 2993 2294 2990 2280 2987 2266 2983 2253 2979 2240 2976 2226 2972 2213 2968 2200 2964 
2187 2960 2173 2956 2161 2951 2148 2947 2135 2943 2122 2938 2110 2934 2097 2929 2085 2924 2072 2919 
2060 2914 2048 2909 2036 2904 2024 2899 2012 2894 2000 2889 1989 2883 1977 2878 1965 2872 1954 2867 
1943 2861 1932 2855 1921 2850 1910 2844 1899 2838 1888 2832 1878 2826 1867 2819 1857 2813 1846 2807 
1836 2801 1826 2794 1816 2788 1807 2781 1797 2774 1787 2768 1778 2761 1769 2754 1759 2747 1750 2740 
1741 2733 1733 2726 1724 2719 1715 2712 1707 2704 1699 2697 1690 2690 1682 2682 1674 2675 1667 2667 
1659 2660 1651 2652 1644 2644 1637 2636 1630 2629 1623 2621 1616 2613 1609 2605 1603 2597 1596 2589 
1590 2581 1584 2572 1578 2564 1572 2556 1566 2548 1561 2539 1555 2531 1550 2523 1545 2514 1540 2506 
1535 2497 1530 2488 1526 2480 1521 2471 1517 2462 1513 2454 1509 2445 1505 2436 1502 2427 1498 2419 
1495 2410 1492 2401 1489 2392 1486 2383 1483 2374 1480 2365 1478 2356 1476 2347 1473 2338 1471 2329 
1470 2319 1468 2310 1466 2301 1465 2292 1464 2283 1463 2274 1462 2264 1461 2255 1460 2246 1460 2236 
1460 2227 1460 2218 1460 2209 1460 2199 1460 2190 1461 2181 1461 2171 1462 2162 1463 2153 1464 2143 
1465 2134 1467 2125 1468 2115 1470 2106 1472 2097 1474 2087 1476 2078 1478 2068 1481 2059 1483 2050 
1486 2040 1489 2031 1492 2022 1495 2013 1499 2003 1502 1994 1506 1985 1510 1975 1514 1966 1518 1957 
1522 1948 1526 1939 1531 1929 1536 1920 1540 1911 1545 1902 1551 1893 1556 1884 1561 1875 1567 1866 
1573 1857 1578 1848 1584 1839 1591 1830 1597 1821 1603 1812 1610 1804 1617 1795 1623 1786 1630 1777 
1638 1769 1645 1760 1652 1751 1660 1743 1667 1734 1675 1726 1683 1717 1691 1709 1699 1700 1708 1692 
1716 1684 1725 1676 1733 1667 1742 1659 1751 1651 1760 1643 1770 1635 1779 1627 1788 1619 1798 1611 
1808 1603 1817 1596 1827 1588 1837 1580 1848 1573 1858 1565 1868 1558 1879 1550 1889 1543 1900 1535 
1911 1528 1922 1521 1933 1514 1944 1507 1955 1500 1967 1493 1978 1486 1990 1479 2001 1472 2013 1465 
2025 1459 2037 1452 2049 1446 2061 1439 2074 1433 2086 1427 2098 1420 2111 1414 2124 1408 2136 1402 
2149 1396 2162 1390 2175 1384 2188 1379 2201 1373 2214 1367 2228 1362 2241 1356 2254 1351 2268 1346 
2281 1341 2295 1335 2309 1330 2323 1325 2337 1321 2350 1316 2364 1311 2379 1306 2393 1302 2407 1297 
2421 1293 2435 1289 2450 1284 2464 1280 2479 1276 2493 1272 2508 1268 2522 1264 2537 1261 2552 1257 
2566 1253 2581 1250 2596 1247 2611 1243 2626 1240 2641 1237 2656 1234 2671 1231 2686 1228 2701 1225 
2716 1223 2731 1220 2747 1218 2762 1215 2777 1213 2792 1211 2808 1208 2823 1206 2838 1204 2853 1203 
2869 1201 2884 1199 2900 1198 2915 1196 2930 1195 2946 1193 2961 1192 2976 1191 2992 1190 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-300) 650 3873 0  0.00 [650 3773 200 99] Show
%Latex:\myput{650}{367}{5}{-300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-200) 1400 3873 0  0.00 [1400 3773 200 99] Show
%Latex:\myput{1400}{367}{5}{-200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1500 3710 1500 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-100) 2150 3873 0  0.00 [2150 3773 200 99] Show
%Latex:\myput{2150}{367}{5}{-100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2250 3710 2250 3773 
] dogrey 
32 Setcolor
32 Setcolor
(0) 2973 3873 0  0.00 [2973 3773 55 99] Show
%Latex:\myput{2973}{367}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 3710 3000 3773 
] dogrey 
32 Setcolor
32 Setcolor
(100) 3667 3873 0  0.00 [3667 3773 166 99] Show
%Latex:\myput{3667}{367}{5}{100}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3750 3710 3750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(200) 4417 3873 0  0.00 [4417 3773 166 99] Show
%Latex:\myput{4417}{367}{5}{200}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4500 3710 4500 3773 
] dogrey 
32 Setcolor
32 Setcolor
(300) 5167 3873 0  0.00 [5167 3773 166 99] Show
%Latex:\myput{5167}{367}{5}{300}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[938 3710 938 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1125 3710 1125 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1313 3710 1313 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1500 3710 1500 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1688 3710 1688 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2063 3710 2063 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2438 3710 2438 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2625 3710 2625 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2813 3710 2813 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3188 3710 3188 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3375 3710 3375 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3563 3710 3563 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3938 3710 3938 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4313 3710 4313 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4500 3710 4500 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4688 3710 4688 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4875 3710 4875 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[5063 3710 5063 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-50) 534 3748 0  0.00 [534 3648 144 99] Show
%Latex:\myput{534}{492}{5}{-50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
32 Setcolor
32 Setcolor
(-40) 534 3430 0  0.00 [534 3330 144 99] Show
%Latex:\myput{534}{810}{5}{-40}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3392 690 3392 
] dogrey 
32 Setcolor
32 Setcolor
(-30) 534 3112 0  0.00 [534 3012 144 99] Show
%Latex:\myput{534}{1128}{5}{-30}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3074 690 3074 
] dogrey 
32 Setcolor
32 Setcolor
(-20) 534 2794 0  0.00 [534 2694 144 99] Show
%Latex:\myput{534}{1446}{5}{-20}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2756 690 2756 
] dogrey 
32 Setcolor
32 Setcolor
(-10) 534 2476 0  0.00 [534 2376 144 99] Show
%Latex:\myput{534}{1764}{5}{-10}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2438 690 2438 
] dogrey 
32 Setcolor
32 Setcolor
(0) 623 2158 0  0.00 [623 2058 55 99] Show
%Latex:\myput{623}{2082}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2120 690 2120 
] dogrey 
32 Setcolor
32 Setcolor
(10) 567 1840 0  0.00 [567 1740 111 99] Show
%Latex:\myput{567}{2400}{5}{10}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1802 690 1802 
] dogrey 
32 Setcolor
32 Setcolor
(20) 567 1522 0  0.00 [567 1422 111 99] Show
%Latex:\myput{567}{2718}{5}{20}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1484 690 1484 
] dogrey 
32 Setcolor
32 Setcolor
(30) 567 1204 0  0.00 [567 1104 111 99] Show
%Latex:\myput{567}{3036}{5}{30}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1166 690 1166 
] dogrey 
32 Setcolor
32 Setcolor
(40) 567 886 0  0.00 [567 786 111 99] Show
%Latex:\myput{567}{3354}{5}{40}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 848 690 848 
] dogrey 
32 Setcolor
32 Setcolor
(50) 567 568 0  0.00 [567 468 111 99] Show
%Latex:\myput{567}{3672}{5}{50}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3551 705 3551 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3392 705 3392 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3233 705 3233 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3074 705 3074 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2756 705 2756 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2597 705 2597 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2438 705 2438 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2279 705 2279 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1961 705 1961 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1802 705 1802 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1643 705 1643 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1484 705 1484 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1166 705 1166 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1007 705 1007 
] dogrey 
 (drawsegs) 4 [ 32]
[750 848 705 848 
] dogrey 
 (drawsegs) 4 [ 32]
[750 689 705 689 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 5250 3710 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 530 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
[70 20 70 20 ] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(x1) 2948 4055 0  0.00 [2948 3955 105 99] Show
%Latex:\myput{2948}{185}{5}{x1}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(x2) 470 2151 0 270.00 [470 2051 105 99] Show
%Latex:\myput{470}{2089}{5}{x2}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


