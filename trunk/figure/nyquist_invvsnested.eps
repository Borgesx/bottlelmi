%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
750 530 4500 3180 setclipzone
-1 -1 200000 200000 setclipzone
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1393 3710 1393 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2036 3710 2036 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2679 3710 2679 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3321 3710 3321 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3964 3710 3964 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4607 3710 4607 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3180 5250 3180 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2650 5250 2650 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1590 5250 1590 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1060 5250 1060 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 422 [ 0]
[4607 2116 4607 2115 4607 2113 4607 2110 4607 2107 4607 2103 4607 2099 4607 2093 4607 2089 4607 2083 
4606 2074 4606 2067 4606 2059 4605 2048 4605 2040 4604 2031 4603 2019 4602 2004 4601 1995 4600 1984 
4598 1971 4596 1955 4593 1936 4591 1924 4589 1911 4586 1895 4583 1878 4578 1857 4573 1833 4569 1819 
4565 1804 4561 1787 4555 1768 4549 1747 4541 1723 4532 1697 4520 1666 4513 1649 4505 1630 4497 1610 
4487 1589 4475 1566 4462 1540 4447 1512 4430 1482 4410 1448 4386 1411 4357 1370 4340 1347 4322 1324 
4302 1299 4279 1272 4254 1244 4226 1214 4195 1183 4160 1149 4120 1114 4074 1076 4049 1056 4022 1036 
3993 1015 3962 994 3928 972 3892 950 3853 927 3811 904 3766 881 3716 858 3662 834 3604 811 
3540 788 3470 766 3433 756 3394 746 3353 736 3311 727 3266 719 3219 711 3171 704 3119 698 
3066 694 3010 690 2952 689 2891 689 2827 691 2761 695 2692 702 2620 713 2545 726 2468 743 
2389 765 2348 777 2307 791 2265 806 2223 823 2181 841 2138 860 2095 881 2052 904 2008 929 
1965 955 1922 983 1879 1014 1837 1046 1795 1080 1754 1117 1714 1156 1675 1197 1637 1240 1601 1286 
1567 1334 1534 1384 1504 1436 1476 1491 1451 1548 1429 1607 1411 1667 1396 1730 1385 1794 1378 1860 
1375 1927 1377 1995 1384 2064 1396 2133 1412 2203 1434 2272 1462 2340 1495 2408 1533 2474 1576 2539 
1624 2601 1678 2661 1736 2718 1798 2772 1865 2823 1936 2870 2010 2913 2087 2951 2166 2985 2248 3015 
2332 3040 2416 3060 2502 3075 2588 3086 2673 3092 2759 3093 2843 3090 2926 3082 3007 3070 3086 3054 
3163 3033 3237 3010 3309 2982 3377 2952 3442 2918 3504 2881 3562 2842 3617 2800 3668 2756 3715 2710 
3758 2662 3797 2612 3832 2561 3863 2509 3890 2455 3912 2401 3931 2346 3946 2290 3956 2233 3962 2177 
3964 2148 3964 2134 3964 2127 3964 2124 3964 2122 3964 2121 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 426 [ 0]
[3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 
3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2120 3964 2119 3964 2118 3964 2116 
3964 2113 3964 2106 3964 2092 3962 2063 3956 2007 3946 1950 3931 1894 3912 1839 3890 1785 3863 1731 
3832 1679 3797 1628 3758 1578 3715 1530 3668 1484 3617 1440 3562 1398 3504 1359 3442 1322 3377 1288 
3309 1258 3237 1230 3163 1207 3086 1186 3007 1170 2926 1158 2843 1150 2759 1147 2673 1148 2588 1154 
2502 1165 2416 1180 2332 1200 2248 1225 2166 1255 2087 1289 2010 1327 1936 1370 1865 1417 1798 1468 
1736 1522 1678 1579 1624 1639 1576 1701 1533 1766 1495 1832 1462 1900 1434 1968 1412 2037 1396 2107 
1384 2176 1377 2245 1375 2313 1378 2380 1385 2446 1396 2510 1411 2573 1429 2633 1451 2692 1476 2749 
1504 2804 1534 2856 1567 2906 1601 2954 1637 3000 1675 3043 1714 3084 1754 3123 1795 3160 1837 3194 
1879 3226 1922 3257 1965 3285 2008 3311 2052 3336 2095 3359 2138 3380 2181 3399 2223 3417 2265 3434 
2307 3449 2348 3463 2389 3475 2468 3497 2545 3514 2620 3527 2692 3538 2761 3545 2827 3549 2891 3551 
2952 3551 3010 3550 3066 3546 3119 3542 3171 3536 3219 3529 3266 3521 3311 3513 3353 3504 3394 3494 
3433 3484 3470 3474 3540 3452 3604 3429 3662 3406 3716 3382 3766 3359 3811 3336 3853 3313 3892 3290 
3928 3268 3962 3246 3993 3225 4022 3204 4049 3184 4074 3164 4120 3126 4160 3091 4195 3057 4226 3026 
4254 2996 4279 2968 4302 2941 4322 2916 4340 2893 4357 2870 4386 2829 4410 2792 4430 2758 4447 2728 
4462 2700 4475 2674 4487 2651 4497 2630 4505 2610 4513 2591 4520 2574 4532 2543 4541 2517 4549 2493 
4555 2472 4561 2453 4565 2436 4569 2421 4573 2407 4578 2383 4583 2362 4586 2345 4589 2329 4591 2316 
4593 2304 4596 2285 4598 2269 4600 2256 4601 2245 4602 2236 4603 2221 4604 2209 4605 2200 4605 2192 
4606 2181 4606 2173 4606 2166 4607 2157 4607 2151 4607 2147 4607 2141 4607 2137 4607 2133 4607 2130 
4607 2127 4607 2125 4607 2124 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1000) 4607 2104 0  0.00 [4607 2004 255 99] Show
%Latex:\myput{4607}{2136}{5}{-1000}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-6.441) 4430 1470 0  0.00 [4430 1370 283 99] Show
%Latex:\myput{4430}{2770}{5}{-6.441}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-3.199) 3892 938 0  0.00 [3892 838 283 99] Show
%Latex:\myput{3892}{3302}{5}{-3.199}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.133) 3066 682 0  0.00 [3066 582 283 99] Show
%Latex:\myput{3066}{3558}{5}{-2.133}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.6) 2181 829 0  0.00 [2181 729 172 99] Show
%Latex:\myput{2181}{3411}{5}{-1.6}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.28) 1567 1322 0  0.00 [1567 1222 227 99] Show
%Latex:\myput{1567}{2918}{5}{-1.28}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.045) 1377 1983 0  0.00 [1377 1883 283 99] Show
%Latex:\myput{1377}{2257}{5}{-1.045}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.640) 2332 3028 0  0.00 [2332 2928 283 99] Show
%Latex:\myput{2332}{1212}{5}{-0.640}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.405) 3237 2998 0  0.00 [3237 2898 283 99] Show
%Latex:\myput{3237}{1242}{5}{-0.405}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.149) 3863 2497 0  0.00 [3863 2397 283 99] Show
%Latex:\myput{3863}{1743}{5}{-0.149}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(1.216) 1476 2737 0  0.00 [1476 2637 250 99] Show
%Latex:\myput{1476}{1503}{5}{1.216}
750 530 4500 3180 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
[] 0 setdash
5 Thickness
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4564 2159 4650 2073 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4564 2073 4650 2159 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4564 2138 4650 2052 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4564 2052 4650 2138 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4387 1525 4473 1439 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4387 1439 4473 1525 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4375 1505 4461 1419 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4375 1419 4461 1505 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3849 993 3935 907 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3849 907 3935 993 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3826 980 3912 894 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3826 894 3912 980 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3023 737 3109 651 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3023 651 3109 737 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2993 735 3079 649 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2993 649 3079 735 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2138 884 2224 798 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2138 798 2224 884 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2112 895 2198 809 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2112 809 2198 895 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1524 1377 1610 1291 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1524 1291 1610 1377 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1511 1396 1597 1310 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1511 1310 1597 1396 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1334 2038 1420 1952 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1334 1952 1420 2038 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1336 2060 1422 1974 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1336 1974 1422 2060 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2289 3083 2375 2997 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2289 2997 2375 3083 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2317 3089 2403 3003 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2317 3003 2403 3089 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3194 3053 3280 2967 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3194 2967 3280 3053 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3220 3043 3306 2957 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3220 2957 3306 3043 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3820 2552 3906 2466 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3820 2466 3906 2552 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3830 2532 3916 2446 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3830 2446 3916 2532 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1433 2792 1519 2706 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1433 2706 1519 2792 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1443 2812 1529 2726 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1443 2726 1529 2812 
] dogrey 
32 Setcolor
/absolu true def
[] 0 setdash
5 Thickness
32 Setcolor
32 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
32 Setcolor
 (drawarrows) 44 [ 34]
[4607 2116 4607 2095 4430 1482 4418 1462 3892 950 3869 937 3066 694 3036 692 2181 841 2155 852 
1567 1334 1554 1353 1377 1995 1379 2017 2332 3040 2360 3046 3237 3010 3263 3000 3863 2509 3873 2489 
1476 2749 1486 2769 
] dogrey 
[] 0 setdash
32 Setcolor
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2120 5250 2120 
] dogrey 
32 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4 [ 0]
[4607 3710 4607 530 
] dogrey 
32 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[3951 2120 3951 2112 3951 2104 3951 2096 3950 2088 3950 2081 3949 2073 3949 2065 3948 2057 3947 2049 
3946 2041 3945 2033 3944 2025 3943 2018 3942 2010 3940 2002 3939 1994 3937 1986 3936 1979 3934 1971 
3932 1963 3930 1955 3928 1948 3926 1940 3924 1932 3921 1925 3919 1917 3916 1909 3914 1902 3911 1894 
3908 1887 3906 1879 3903 1872 3899 1864 3896 1857 3893 1849 3890 1842 3886 1834 3883 1827 3879 1820 
3876 1813 3872 1805 3868 1798 3864 1791 3860 1784 3856 1777 3852 1769 3847 1762 3843 1755 3838 1748 
3834 1741 3829 1735 3825 1728 3820 1721 3815 1714 3810 1707 3805 1701 3800 1694 3795 1687 3789 1681 
3784 1674 3778 1668 3773 1661 3767 1655 3762 1648 3756 1642 3750 1636 3744 1630 3738 1624 3732 1617 
3726 1611 3720 1605 3713 1599 3707 1593 3701 1588 3694 1582 3688 1576 3681 1570 3674 1565 3668 1559 
3661 1554 3654 1548 3647 1543 3640 1537 3633 1532 3626 1527 3618 1522 3611 1516 3604 1511 3596 1506 
3589 1501 3581 1497 3574 1492 3566 1487 3558 1482 3551 1478 3543 1473 3535 1469 3527 1464 3519 1460 
3511 1456 3503 1451 3495 1447 3486 1443 3478 1439 3470 1435 3462 1431 3453 1427 3445 1424 3436 1420 
3428 1416 3419 1413 3411 1409 3402 1406 3393 1403 3385 1399 3376 1396 3367 1393 3358 1390 3349 1387 
3340 1384 3332 1381 3323 1378 3314 1376 3305 1373 3295 1371 3286 1368 3277 1366 3268 1364 3259 1361 
3250 1359 3240 1357 3231 1355 3222 1353 3213 1351 3203 1350 3194 1348 3184 1346 3175 1345 3166 1343 
3156 1342 3147 1341 3137 1339 3128 1338 3118 1337 3109 1336 3099 1335 3090 1334 3080 1334 3071 1333 
3061 1332 3052 1332 3042 1331 3033 1331 3023 1331 3013 1331 3004 1330 2994 1330 2985 1330 2975 1331 
2965 1331 2956 1331 2946 1331 2937 1332 2927 1332 2918 1333 2908 1334 2899 1334 2889 1335 2880 1336 
2870 1337 2861 1338 2851 1339 2842 1340 2832 1342 2823 1343 2813 1344 2804 1346 2795 1348 2785 1349 
2776 1351 2767 1353 2757 1355 2748 1357 2739 1359 2730 1361 2720 1363 2711 1365 2702 1368 2693 1370 
2684 1373 2675 1375 2666 1378 2657 1381 2648 1384 2639 1387 2630 1389 2621 1392 2612 1396 2604 1399 
2595 1402 2586 1405 2578 1409 2569 1412 2560 1416 2552 1419 2543 1423 2535 1427 2527 1431 2518 1434 
2510 1438 2502 1442 2493 1447 2485 1451 2477 1455 2469 1459 2461 1464 2453 1468 2445 1472 2438 1477 
2430 1482 2422 1486 2414 1491 2407 1496 2399 1501 2392 1506 2384 1511 2377 1516 2370 1521 2363 1526 
2355 1531 2348 1536 2341 1542 2334 1547 2327 1553 2320 1558 2314 1564 2307 1569 2300 1575 2294 1581 
2287 1587 2281 1593 2274 1598 2268 1604 2262 1610 2256 1616 2250 1623 2244 1629 2238 1635 2232 1641 
2226 1647 2220 1654 2215 1660 2209 1667 2204 1673 2198 1680 2193 1686 2188 1693 2183 1700 2178 1706 
2173 1713 2168 1720 2163 1727 2158 1733 2154 1740 2149 1747 2145 1754 2140 1761 2136 1768 2132 1775 
2128 1783 2124 1790 2120 1797 2116 1804 2112 1811 2108 1819 2105 1826 2101 1833 2098 1841 2094 1848 
2091 1855 2088 1863 2085 1870 2082 1878 2079 1885 2076 1893 2073 1901 2071 1908 2068 1916 2066 1923 
2064 1931 2061 1939 2059 1946 2057 1954 2055 1962 2053 1970 2051 1977 2050 1985 2048 1993 2047 2001 
2045 2009 2044 2016 2043 2024 2042 2032 2041 2040 2040 2048 2039 2056 2038 2064 2038 2071 2037 2079 
2037 2087 2036 2095 2036 2103 2036 2111 2036 2119 2036 2127 2036 2135 2036 2142 2036 2150 2037 2158 
2037 2166 2038 2174 2039 2182 2039 2190 2040 2198 2041 2205 2042 2213 2044 2221 2045 2229 2046 2237 
2048 2245 2049 2252 2051 2260 2053 2268 2055 2276 2056 2283 2058 2291 2061 2299 2063 2306 2065 2314 
2068 2322 2070 2329 2073 2337 2075 2345 2078 2352 2081 2360 2084 2367 2087 2375 2090 2382 2093 2390 
2097 2397 2100 2404 2103 2412 2107 2419 2111 2426 2114 2434 2118 2441 2122 2448 2126 2455 2130 2462 
2135 2469 2139 2476 2143 2484 2148 2490 2152 2497 2157 2504 2162 2511 2166 2518 2171 2525 2176 2532 
2181 2538 2186 2545 2192 2552 2197 2558 2202 2565 2208 2571 2213 2578 2219 2584 2224 2591 2230 2597 
2236 2603 2242 2609 2248 2616 2254 2622 2260 2628 2266 2634 2272 2640 2279 2646 2285 2651 2292 2657 
2298 2663 2305 2669 2312 2674 2318 2680 2325 2686 2332 2691 2339 2696 2346 2702 2353 2707 2360 2712 
2367 2718 2375 2723 2382 2728 2389 2733 2397 2738 2404 2743 2412 2747 2420 2752 2427 2757 2435 2762 
2443 2766 2451 2771 2459 2775 2467 2779 2475 2784 2483 2788 2491 2792 2499 2796 2507 2800 2516 2804 
2524 2808 2532 2812 2541 2816 2549 2819 2558 2823 2566 2827 2575 2830 2583 2834 2592 2837 2601 2840 
2610 2843 2618 2847 2627 2850 2636 2853 2645 2855 2654 2858 2663 2861 2672 2864 2681 2866 2690 2869 
2699 2871 2708 2874 2717 2876 2727 2878 2736 2880 2745 2883 2754 2885 2764 2887 2773 2888 2782 2890 
2792 2892 2801 2893 2810 2895 2820 2896 2829 2898 2839 2899 2848 2900 2858 2902 2867 2903 2877 2904 
2886 2905 2896 2905 2905 2906 2915 2907 2924 2908 2934 2908 2943 2909 2953 2909 2962 2909 2972 2909 
2982 2910 2991 2910 3001 2910 3010 2909 3020 2909 3029 2909 3039 2909 3049 2908 3058 2908 3068 2907 
3077 2907 3087 2906 3096 2905 3106 2904 3115 2903 3125 2902 3134 2901 3144 2900 3153 2899 3163 2897 
3172 2896 3181 2894 3191 2893 3200 2891 3210 2889 3219 2887 3228 2886 3237 2884 3247 2881 3256 2879 
3265 2877 3274 2875 3283 2873 3293 2870 3302 2868 3311 2865 3320 2862 3329 2860 3338 2857 3347 2854 
3355 2851 3364 2848 3373 2845 3382 2842 3391 2838 3399 2835 3408 2832 3417 2828 3425 2825 3434 2821 
3442 2818 3451 2814 3459 2810 3467 2806 3476 2802 3484 2798 3492 2794 3500 2790 3508 2786 3516 2781 
3524 2777 3532 2773 3540 2768 3548 2764 3556 2759 3564 2754 3571 2750 3579 2745 3586 2740 3594 2735 
3601 2730 3609 2725 3616 2720 3623 2715 3630 2710 3638 2704 3645 2699 3652 2694 3659 2688 3665 2683 
3672 2677 3679 2671 3686 2666 3692 2660 3699 2654 3705 2648 3711 2643 3718 2637 3724 2631 3730 2625 
3736 2618 3742 2612 3748 2606 3754 2600 3760 2594 3766 2587 3771 2581 3777 2574 3782 2568 3788 2561 
3793 2555 3798 2548 3803 2542 3808 2535 3813 2528 3818 2521 3823 2515 3828 2508 3832 2501 3837 2494 
3842 2487 3846 2480 3850 2473 3854 2466 3859 2459 3863 2451 3867 2444 3871 2437 3874 2430 3878 2423 
3882 2415 3885 2408 3889 2401 3892 2393 3895 2386 3898 2378 3902 2371 3905 2363 3907 2356 3910 2348 
3913 2341 3916 2333 3918 2325 3921 2318 3923 2310 3925 2302 3927 2295 3929 2287 3931 2279 3933 2272 
3935 2264 3937 2256 3938 2248 3940 2240 3941 2233 3943 2225 3944 2217 3945 2209 3946 2201 3947 2193 
3948 2186 3949 2178 3949 2170 3950 2162 3950 2154 3951 2146 3951 2138 3951 2130 3951 2123 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
1 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
750 530 4500 3180 setclipzone
1 Setcolor
10 Thickness
[70 20 70 20 ] 0 setdash
/closeflag false def
 (drawpoly) 1258 [ 0]
[3689 2120 3689 2111 3689 2102 3688 2093 3688 2083 3687 2074 3687 2065 3686 2056 3685 2047 3684 2038 
3683 2029 3682 2020 3681 2011 3679 2001 3678 1992 3676 1983 3675 1974 3673 1965 3671 1956 3669 1947 
3667 1938 3664 1929 3662 1921 3660 1912 3657 1903 3654 1894 3652 1885 3649 1876 3646 1867 3642 1859 
3639 1850 3636 1841 3632 1832 3629 1824 3625 1815 3622 1807 3618 1798 3614 1789 3610 1781 3606 1772 
3601 1764 3597 1756 3592 1747 3588 1739 3583 1731 3578 1722 3574 1714 3569 1706 3563 1698 3558 1690 
3553 1682 3548 1674 3542 1666 3537 1658 3531 1650 3525 1642 3519 1634 3513 1627 3507 1619 3501 1611 
3495 1604 3489 1596 3482 1589 3476 1581 3469 1574 3463 1567 3456 1560 3449 1552 3442 1545 3435 1538 
3428 1531 3421 1524 3414 1517 3406 1510 3399 1504 3391 1497 3384 1490 3376 1484 3368 1477 3360 1471 
3352 1464 3345 1458 3336 1452 3328 1445 3320 1439 3312 1433 3303 1427 3295 1421 3286 1415 3278 1410 
3269 1404 3261 1398 3252 1393 3243 1387 3234 1382 3225 1376 3216 1371 3207 1366 3198 1361 3188 1356 
3179 1351 3170 1346 3160 1341 3151 1336 3141 1332 3132 1327 3122 1323 3112 1318 3103 1314 3093 1310 
3083 1305 3073 1301 3063 1297 3053 1293 3043 1289 3033 1286 3023 1282 3013 1278 3002 1275 2992 1271 
2982 1268 2971 1265 2961 1262 2951 1258 2940 1255 2930 1253 2919 1250 2909 1247 2898 1244 2887 1242 
2877 1239 2866 1237 2855 1234 2844 1232 2834 1230 2823 1228 2812 1226 2801 1224 2790 1222 2779 1221 
2768 1219 2758 1218 2747 1216 2736 1215 2725 1214 2714 1213 2703 1211 2692 1211 2681 1210 2670 1209 
2658 1208 2647 1208 2636 1207 2625 1207 2614 1206 2603 1206 2592 1206 2581 1206 2570 1206 2559 1206 
2548 1206 2537 1207 2525 1207 2514 1207 2503 1208 2492 1209 2481 1210 2470 1210 2459 1211 2448 1212 
2437 1214 2426 1215 2415 1216 2404 1217 2393 1219 2382 1221 2371 1222 2361 1224 2350 1226 2339 1228 
2328 1230 2317 1232 2307 1234 2296 1236 2285 1239 2274 1241 2264 1244 2253 1247 2243 1249 2232 1252 
2222 1255 2211 1258 2201 1261 2190 1264 2180 1267 2170 1271 2159 1274 2149 1278 2139 1281 2129 1285 
2119 1289 2109 1293 2099 1297 2089 1301 2079 1305 2069 1309 2059 1313 2049 1317 2040 1322 2030 1326 
2020 1331 2011 1336 2001 1340 1992 1345 1982 1350 1973 1355 1964 1360 1955 1365 1946 1370 1937 1376 
1928 1381 1919 1386 1910 1392 1901 1397 1892 1403 1884 1409 1875 1415 1866 1420 1858 1426 1850 1432 
1841 1438 1833 1444 1825 1451 1817 1457 1809 1463 1801 1470 1793 1476 1785 1483 1778 1489 1770 1496 
1762 1503 1755 1509 1748 1516 1740 1523 1733 1530 1726 1537 1719 1544 1712 1551 1705 1558 1698 1566 
1692 1573 1685 1580 1679 1588 1672 1595 1666 1603 1660 1610 1654 1618 1648 1625 1642 1633 1636 1641 
1630 1649 1624 1657 1619 1665 1613 1672 1608 1680 1603 1689 1597 1697 1592 1705 1587 1713 1582 1721 
1578 1729 1573 1738 1568 1746 1564 1754 1559 1763 1555 1771 1551 1780 1547 1788 1543 1797 1539 1805 
1535 1814 1532 1822 1528 1831 1525 1840 1521 1848 1518 1857 1515 1866 1512 1875 1509 1884 1506 1892 
1503 1901 1501 1910 1498 1919 1496 1928 1494 1937 1492 1946 1489 1955 1488 1964 1486 1973 1484 1982 
1482 1991 1481 2000 1479 2009 1478 2018 1477 2027 1476 2036 1475 2045 1474 2055 1473 2064 1473 2073 
1472 2082 1472 2091 1472 2100 1471 2109 1471 2119 1471 2128 1471 2137 1472 2146 1472 2155 1473 2164 
1473 2173 1474 2182 1475 2192 1476 2201 1477 2210 1478 2219 1479 2228 1480 2237 1482 2246 1483 2255 
1485 2264 1487 2273 1489 2282 1491 2291 1493 2300 1495 2309 1498 2318 1500 2327 1503 2336 1505 2345 
1508 2354 1511 2362 1514 2371 1517 2380 1520 2389 1524 2397 1527 2406 1531 2415 1534 2423 1538 2432 
1542 2441 1546 2449 1550 2458 1554 2466 1558 2475 1562 2483 1567 2491 1571 2500 1576 2508 1581 2516 
1586 2525 1591 2533 1596 2541 1601 2549 1606 2557 1611 2565 1617 2573 1622 2581 1628 2589 1634 2597 
1640 2604 1646 2612 1652 2620 1658 2627 1664 2635 1670 2642 1677 2650 1683 2657 1690 2665 1696 2672 
1703 2679 1710 2687 1717 2694 1724 2701 1731 2708 1738 2715 1745 2722 1753 2729 1760 2735 1768 2742 
1775 2749 1783 2755 1791 2762 1798 2768 1806 2775 1814 2781 1822 2787 1830 2794 1839 2800 1847 2806 
1855 2812 1864 2818 1872 2824 1881 2829 1889 2835 1898 2841 1907 2846 1916 2852 1925 2857 1934 2863 
1943 2868 1952 2873 1961 2878 1970 2883 1979 2888 1989 2893 1998 2898 2008 2903 2017 2908 2027 2912 
2036 2917 2046 2921 2056 2926 2066 2930 2076 2934 2085 2938 2095 2942 2105 2946 2115 2950 2125 2954 
2136 2957 2146 2961 2156 2965 2166 2968 2177 2971 2187 2975 2197 2978 2208 2981 2218 2984 2229 2987 
2239 2990 2250 2993 2260 2995 2271 2998 2282 3000 2292 3003 2303 3005 2314 3007 2325 3010 2335 3012 
2346 3014 2357 3015 2368 3017 2379 3019 2390 3021 2401 3022 2412 3024 2423 3025 2434 3026 2445 3027 
2456 3028 2467 3029 2478 3030 2489 3031 2500 3032 2511 3032 2522 3033 2533 3033 2544 3034 2555 3034 
2566 3034 2577 3034 2588 3034 2600 3034 2611 3034 2622 3033 2633 3033 2644 3033 2655 3032 2666 3031 
2677 3031 2688 3030 2699 3029 2710 3028 2721 3027 2732 3025 2743 3024 2754 3023 2765 3021 2776 3020 
2787 3018 2798 3016 2809 3014 2819 3013 2830 3011 2841 3008 2852 3006 2862 3004 2873 3002 2884 2999 
2895 2997 2905 2994 2916 2991 2926 2988 2937 2985 2947 2983 2958 2979 2968 2976 2978 2973 2989 2970 
2999 2966 3009 2963 3020 2959 3030 2956 3040 2952 3050 2948 3060 2944 3070 2940 3080 2936 3090 2932 
3099 2928 3109 2923 3119 2919 3129 2914 3138 2910 3148 2905 3157 2900 3167 2896 3176 2891 3185 2886 
3195 2881 3204 2876 3213 2870 3222 2865 3231 2860 3240 2855 3249 2849 3258 2843 3266 2838 3275 2832 
3284 2826 3292 2821 3301 2815 3309 2809 3317 2803 3326 2797 3334 2790 3342 2784 3350 2778 3358 2771 
3366 2765 3374 2758 3381 2752 3389 2745 3396 2739 3404 2732 3411 2725 3419 2718 3426 2711 3433 2704 
3440 2697 3447 2690 3454 2683 3461 2676 3467 2668 3474 2661 3480 2653 3487 2646 3493 2639 3499 2631 
3506 2623 3512 2616 3518 2608 3523 2600 3529 2592 3535 2585 3540 2577 3546 2569 3551 2561 3557 2553 
3562 2545 3567 2537 3572 2528 3577 2520 3582 2512 3586 2504 3591 2495 3595 2487 3600 2479 3604 2470 
3608 2462 3612 2453 3616 2445 3620 2436 3624 2428 3628 2419 3631 2410 3635 2402 3638 2393 3641 2384 
3645 2375 3648 2367 3651 2358 3653 2349 3656 2340 3659 2331 3661 2322 3664 2313 3666 2304 3668 2295 
3670 2287 3672 2278 3674 2269 3676 2259 3677 2250 3679 2241 3680 2232 3682 2223 3683 2214 3684 2205 
3685 2196 3686 2187 3687 2178 3687 2169 3688 2159 3688 2150 3688 2141 3689 2132 3689 2123 
] dogrey 
1 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-6) 706 3873 0  0.00 [706 3773 88 99] Show
%Latex:\myput{706}{367}{5}{-6}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-5) 1349 3873 0  0.00 [1349 3773 88 99] Show
%Latex:\myput{1349}{367}{5}{-5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1393 3710 1393 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-4) 1992 3873 0  0.00 [1992 3773 88 99] Show
%Latex:\myput{1992}{367}{5}{-4}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2036 3710 2036 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-3) 2635 3873 0  0.00 [2635 3773 88 99] Show
%Latex:\myput{2635}{367}{5}{-3}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2679 3710 2679 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-2) 3277 3873 0  0.00 [3277 3773 88 99] Show
%Latex:\myput{3277}{367}{5}{-2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3321 3710 3321 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 3920 3873 0  0.00 [3920 3773 88 99] Show
%Latex:\myput{3920}{367}{5}{-1}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3964 3710 3964 3773 
] dogrey 
32 Setcolor
32 Setcolor
(0) 4580 3873 0  0.00 [4580 3773 55 99] Show
%Latex:\myput{4580}{367}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4607 3710 4607 3773 
] dogrey 
32 Setcolor
32 Setcolor
(1) 5223 3873 0  0.00 [5223 3773 55 99] Show
%Latex:\myput{5223}{367}{5}{1}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[964 3710 964 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1179 3710 1179 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1393 3710 1393 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1607 3710 1607 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1821 3710 1821 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2036 3710 2036 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2250 3710 2250 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2464 3710 2464 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2679 3710 2679 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2893 3710 2893 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3107 3710 3107 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3321 3710 3321 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3536 3710 3536 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3750 3710 3750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3964 3710 3964 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4179 3710 4179 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4393 3710 4393 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4607 3710 4607 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4821 3710 4821 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[5036 3710 5036 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-3) 590 3748 0  0.00 [590 3648 88 99] Show
%Latex:\myput{590}{492}{5}{-3}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
32 Setcolor
32 Setcolor
(-2) 590 3218 0  0.00 [590 3118 88 99] Show
%Latex:\myput{590}{1022}{5}{-2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3180 690 3180 
] dogrey 
32 Setcolor
32 Setcolor
(-1) 590 2688 0  0.00 [590 2588 88 99] Show
%Latex:\myput{590}{1552}{5}{-1}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2650 690 2650 
] dogrey 
32 Setcolor
32 Setcolor
(0) 623 2158 0  0.00 [623 2058 55 99] Show
%Latex:\myput{623}{2082}{5}{0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2120 690 2120 
] dogrey 
32 Setcolor
32 Setcolor
(1) 623 1628 0  0.00 [623 1528 55 99] Show
%Latex:\myput{623}{2612}{5}{1}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1590 690 1590 
] dogrey 
32 Setcolor
32 Setcolor
(2) 623 1098 0  0.00 [623 998 55 99] Show
%Latex:\myput{623}{3142}{5}{2}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1060 690 1060 
] dogrey 
32 Setcolor
32 Setcolor
(3) 623 568 0  0.00 [623 468 55 99] Show
%Latex:\myput{623}{3672}{5}{3}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3578 705 3578 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3445 705 3445 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3313 705 3313 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3180 705 3180 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3048 705 3048 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2783 705 2783 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2650 705 2650 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2518 705 2518 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2385 705 2385 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2253 705 2253 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1988 705 1988 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1855 705 1855 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1723 705 1723 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1590 705 1590 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1458 705 1458 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1193 705 1193 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1060 705 1060 
] dogrey 
 (drawsegs) 4 [ 32]
[750 928 705 928 
] dogrey 
 (drawsegs) 4 [ 32]
[750 795 705 795 
] dogrey 
 (drawsegs) 4 [ 32]
[750 663 705 663 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 5250 3710 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 530 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
[70 20 70 20 ] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Nyquist plot ) 2724 292 0  0.00 [2724 192 550 99] Show
%Latex:\myput{2724}{3948}{5}{Nyquist plot }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Re\(h\(2i*pi*f\)\)) 2712 4063 0  0.00 [2712 3963 577 99] Show
%Latex:\myput{2712}{177}{5}{Re(h(2i*pi*f))}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Im\(h\(2i*pi*f\)\)) 526 2379 0 270.00 [526 2279 561 99] Show
%Latex:\myput{526}{1861}{5}{Im(h(2i*pi*f))}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


