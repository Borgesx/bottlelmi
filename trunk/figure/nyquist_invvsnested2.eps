%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 14 220 581 621 
%%
%%Scilab Postscript File (Copyright 1995-2005 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	arsize dx mul norme div /dx1 exch def 
	arsize dy mul norme div /dy1 exch def 
% 	2 following lines modified (correction bug 607 (bruno 18 nov 2004)) 
	/depx tipx def 
	/depy tipy def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat
        
        % don't fill if the color is out of colormap
        % that's the disctinction between drawArc and FillArc
	glev 1 WhiteLev add le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica exch definefont pop

/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Bold exch definefont pop

/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-BoldOblique exch definefont pop

/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Helvetica-Oblique exch definefont pop

% used when extracting Latex from scilab generated text
%Latex:% MySetFigFont
%Latex:\begingroup\makeatletter\ifx\MySetFigFont\undefined%
%Latex:\gdef\MySetFigFont#1#2#3#4#5{%
%Latex:  \reset@font\fontsize{#1}{#2pt}%
%Latex:  \fontfamily{#3}\fontseries{#4}\fontshape{#5}%
%Latex:  \selectfont}%
%Latex:\fi\endgroup%
%Latex:% myput 
%Latex:\ifx\myput\undefined%
%Latex:\long\def\myput#1#2#3#4{\put(#1,#2){\makebox(0,0)[lb]{\smash{{\MySetFigFont{#3}{#3}{\familydefault}{\mddefault}{\updefault}{\color[rgb]{0,0,0}#4}}}}}}
%Latex:\fi%

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[1.889764 20 div 0 0 1.889764 20 div neg 141 10 div 6212 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
33 Setcolor
 (drawpoly) 10 [ -34]
[750 530 750 3710 5250 3710 5250 530 750 530 
] dogrey 
33 Setcolor
/absolu true def
32 Setcolor
[] 0 setdash
32 Setcolor
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 750 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1313 3710 1313 530 
] dogrey 
 (drawsegs) 4 [ 3]
[1875 3710 1875 530 
] dogrey 
 (drawsegs) 4 [ 3]
[2438 3710 2438 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3000 3710 3000 530 
] dogrey 
 (drawsegs) 4 [ 3]
[3563 3710 3563 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4125 3710 4125 530 
] dogrey 
 (drawsegs) 4 [ 3]
[4688 3710 4688 530 
] dogrey 
 (drawsegs) 4 [ 3]
[5250 3710 5250 530 
] dogrey 
[] 0 setdash
[20 20 20 20 ] 0 setdash
 (drawsegs) 4 [ 3]
[750 3710 5250 3710 
] dogrey 
 (drawsegs) 4 [ 3]
[750 3313 5250 3313 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2915 5250 2915 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2518 5250 2518 
] dogrey 
 (drawsegs) 4 [ 3]
[750 2120 5250 2120 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1723 5250 1723 
] dogrey 
 (drawsegs) 4 [ 3]
[750 1325 5250 1325 
] dogrey 
 (drawsegs) 4 [ 3]
[750 928 5250 928 
] dogrey 
 (drawsegs) 4 [ 3]
[750 530 5250 530 
] dogrey 
[] 0 setdash
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 444 [ 0]
[4687 2114 4687 2112 4687 2110 4687 2106 4687 2102 4687 2096 4687 2092 4687 2085 4687 2080 4686 2073 
4686 2064 4686 2058 4685 2051 4684 2042 4683 2030 4683 2022 4682 2013 4681 2002 4679 1989 4677 1972 
4675 1962 4673 1950 4671 1937 4668 1921 4664 1903 4659 1881 4656 1868 4652 1853 4647 1837 4642 1819 
4635 1798 4627 1775 4617 1747 4611 1732 4604 1715 4596 1697 4587 1677 4577 1655 4565 1631 4551 1605 
4534 1576 4514 1543 4490 1506 4476 1486 4461 1465 4444 1442 4425 1418 4403 1392 4379 1365 4352 1335 
4321 1303 4286 1269 4246 1233 4199 1193 4173 1172 4145 1151 4115 1128 4082 1105 4046 1082 4007 1057 
3965 1031 3919 1005 3869 979 3814 951 3753 923 3686 895 3613 867 3573 853 3532 839 3488 825 
3442 812 3394 799 3343 786 3289 774 3233 762 3173 751 3110 741 3044 733 2975 725 2901 719 
2824 716 2743 714 2658 715 2568 718 2474 726 2375 737 2325 744 2273 752 2220 762 2166 773 
2111 786 2055 801 1998 817 1941 834 1883 854 1824 876 1764 900 1705 927 1645 956 1585 987 
1525 1022 1466 1059 1407 1099 1349 1143 1293 1190 1239 1240 1186 1294 1137 1351 1090 1413 1048 1478 
1010 1547 977 1620 951 1696 931 1776 924 1818 919 1860 916 1903 916 1946 917 1990 922 2035 
929 2081 939 2127 952 2173 968 2219 987 2266 1010 2313 1036 2360 1065 2406 1098 2452 1135 2498 
1176 2543 1220 2587 1268 2630 1321 2671 1377 2711 1437 2750 1501 2786 1570 2820 1641 2851 1717 2880 
1796 2906 1878 2928 1963 2947 2050 2962 2140 2973 2232 2979 2279 2981 2326 2981 2373 2980 2420 2978 
2467 2975 2515 2970 2562 2964 2609 2957 2657 2949 2703 2939 2750 2928 2796 2915 2841 2901 2886 2886 
2931 2870 2974 2852 3017 2833 3058 2813 3099 2791 3138 2768 3176 2744 3213 2719 3282 2665 3345 2607 
3401 2545 3426 2513 3449 2480 3470 2446 3489 2412 3506 2377 3521 2341 3534 2305 3544 2268 3552 2232 
3558 2194 3561 2157 3562 2139 3562 2129 3562 2125 3562 2122 3562 2121 3562 2121 3562 2120 3562 2120 
3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 
3562 2120 3562 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 
3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 
3562 2120 3563 2120 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
0 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 448 [ 0]
[3563 2120 3563 2120 3563 2120 3562 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 
3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 3563 2120 
3563 2120 3563 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 
3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2120 3562 2119 3562 2119 3562 2118 3562 2115 
3562 2111 3562 2101 3561 2083 3558 2046 3552 2008 3544 1972 3534 1935 3521 1899 3506 1863 3489 1828 
3470 1794 3449 1760 3426 1727 3401 1695 3345 1633 3282 1575 3213 1521 3176 1496 3138 1472 3099 1449 
3058 1427 3017 1407 2974 1388 2931 1370 2886 1354 2841 1339 2796 1325 2750 1312 2703 1301 2657 1291 
2609 1283 2562 1276 2515 1270 2467 1265 2420 1262 2373 1260 2326 1259 2279 1259 2232 1261 2140 1267 
2050 1278 1963 1293 1878 1312 1796 1334 1717 1360 1641 1389 1570 1420 1501 1454 1437 1490 1377 1529 
1321 1569 1268 1610 1220 1653 1176 1697 1135 1742 1098 1788 1065 1834 1036 1880 1010 1927 987 1974 
968 2021 952 2067 939 2113 929 2159 922 2205 917 2250 916 2294 916 2337 919 2380 924 2422 
931 2464 951 2544 977 2620 1010 2693 1048 2762 1090 2827 1137 2889 1186 2946 1239 3000 1293 3050 
1349 3097 1407 3141 1466 3181 1525 3218 1585 3253 1645 3284 1705 3313 1764 3340 1824 3364 1883 3386 
1941 3406 1998 3423 2055 3439 2111 3454 2166 3467 2220 3478 2273 3488 2325 3496 2375 3503 2474 3514 
2568 3522 2658 3525 2743 3526 2824 3524 2901 3521 2975 3515 3044 3507 3110 3499 3173 3489 3233 3478 
3289 3466 3343 3454 3394 3441 3442 3428 3488 3415 3532 3401 3573 3387 3613 3373 3686 3345 3753 3317 
3814 3289 3869 3261 3919 3235 3965 3209 4007 3183 4046 3158 4082 3135 4115 3112 4145 3089 4173 3068 
4199 3047 4246 3007 4286 2971 4321 2937 4352 2905 4379 2875 4403 2848 4425 2822 4444 2798 4461 2775 
4476 2754 4490 2734 4514 2697 4534 2664 4551 2635 4565 2609 4577 2585 4587 2563 4596 2543 4604 2525 
4611 2508 4617 2493 4627 2465 4635 2442 4642 2421 4647 2403 4652 2387 4656 2372 4659 2359 4664 2337 
4668 2319 4671 2303 4673 2290 4675 2278 4677 2268 4679 2251 4681 2238 4682 2227 4683 2218 4683 2210 
4684 2198 4685 2189 4686 2182 4686 2176 4686 2167 4687 2160 4687 2155 4687 2148 4687 2144 4687 2138 
4687 2134 4687 2130 4687 2128 4687 2126 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1000) 4687 2102 0  0.00 [4687 2002 255 99] Show
%Latex:\myput{4687}{2138}{5}{-1000}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-9.555) 4476 1474 0  0.00 [4476 1374 283 99] Show
%Latex:\myput{4476}{2766}{5}{-9.555}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-4.607) 3869 967 0  0.00 [3869 867 283 99] Show
%Latex:\myput{3869}{3273}{5}{-4.607}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-2.09) 2111 774 0  0.00 [2111 674 227 99] Show
%Latex:\myput{2111}{3466}{5}{-2.09}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.536) 1349 1131 0  0.00 [1349 1031 283 99] Show
%Latex:\myput{1349}{3109}{5}{-1.536}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-1.109) 931 1764 0  0.00 [931 1664 283 99] Show
%Latex:\myput{931}{2476}{5}{-1.109}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.811) 1065 2394 0  0.00 [1065 2294 283 99] Show
%Latex:\myput{1065}{1846}{5}{-0.811}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.555) 1717 2868 0  0.00 [1717 2768 283 99] Show
%Latex:\myput{1717}{1372}{5}{-0.555}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(-0.149) 3345 2595 0  0.00 [3345 2495 283 99] Show
%Latex:\myput{3345}{1645}{5}{-0.149}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.043) 3544 1960 0  0.00 [3544 1860 250 99] Show
%Latex:\myput{3544}{2280}{5}{0.043}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(0.235) 3058 1415 0  0.00 [3058 1315 250 99] Show
%Latex:\myput{3058}{2825}{5}{0.235}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(2.474) 2568 3510 0  0.00 [2568 3410 250 99] Show
%Latex:\myput{2568}{730}{5}{2.474}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(3.669) 3488 3403 0  0.00 [3488 3303 250 99] Show
%Latex:\myput{3488}{837}{5}{3.669}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
(6.484) 4246 2995 0  0.00 [4246 2895 250 99] Show
%Latex:\myput{4246}{1245}{5}{6.484}
750 530 4500 3180 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
[] 0 setdash
5 Thickness
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4644 2157 4730 2071 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4644 2071 4730 2157 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4644 2135 4730 2049 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4644 2049 4730 2135 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4433 1529 4519 1443 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4433 1443 4519 1529 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4420 1511 4506 1425 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4420 1425 4506 1511 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3826 1022 3912 936 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3826 936 3912 1022 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3801 1009 3887 923 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3801 923 3887 1009 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2068 829 2154 743 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2068 743 2154 829 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2040 836 2126 750 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2040 750 2126 836 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1306 1186 1392 1100 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1306 1100 1392 1186 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1287 1202 1373 1116 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1287 1116 1373 1202 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[888 1819 974 1733 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[888 1733 974 1819 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[884 1840 970 1754 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[884 1754 970 1840 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1022 2449 1108 2363 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1022 2363 1108 2449 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1036 2468 1122 2382 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1036 2382 1122 2468 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1674 2923 1760 2837 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1674 2837 1760 2923 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[1701 2932 1787 2846 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[1701 2846 1787 2932 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3302 2650 3388 2564 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3302 2564 3388 2650 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3318 2632 3404 2546 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3318 2546 3404 2632 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3501 2015 3587 1929 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3501 1929 3587 2015 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3495 1994 3581 1908 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3495 1908 3581 1994 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3015 1470 3101 1384 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3015 1384 3101 1470 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2990 1458 3076 1372 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2990 1372 3076 1458 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2525 3565 2611 3479 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2525 3479 2611 3565 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[2555 3566 2641 3480 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[2555 3480 2641 3566 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3445 3458 3531 3372 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3445 3372 3531 3458 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3473 3449 3559 3363 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[3473 3363 3559 3449 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4203 3050 4289 2964 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4203 2964 4289 3050 
] dogrey 
32 Setcolor
/absolu true def
32 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[4221 3034 4307 2948 
] dogrey 
32 Setcolor
/absolu true def
/closeflag false def
 (drawpoly) 4 [ 0]
[4221 2948 4307 3034 
] dogrey 
32 Setcolor
/absolu true def
[] 0 setdash
5 Thickness
32 Setcolor
32 Setcolor
5 Thickness
[] 0 setdash
[] 0 setdash
32 Setcolor
 (drawarrows) 56 [ 34]
[4687 2114 4687 2092 4476 1486 4463 1468 3869 979 3844 966 2111 786 2083 793 1349 1143 1330 1159 
931 1776 927 1797 1065 2406 1079 2425 1717 2880 1744 2889 3345 2607 3361 2589 3544 1972 3538 1951 
3058 1427 3033 1415 2568 3522 2598 3523 3488 3415 3516 3406 4246 3007 4264 2991 
] dogrey 
[] 0 setdash
32 Setcolor
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4 [ 0]
[750 2120 5250 2120 
] dogrey 
32 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
/closeflag false def
 (drawpoly) 4 [ 0]
[4688 3710 4688 530 
] dogrey 
32 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-3.5) 664 3873 0  0.00 [664 3773 172 99] Show
%Latex:\myput{664}{367}{5}{-3.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-3.0) 1227 3873 0  0.00 [1227 3773 172 99] Show
%Latex:\myput{1227}{367}{5}{-3.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1313 3710 1313 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-2.5) 1789 3873 0  0.00 [1789 3773 172 99] Show
%Latex:\myput{1789}{367}{5}{-2.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[1875 3710 1875 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-2.0) 2352 3873 0  0.00 [2352 3773 172 99] Show
%Latex:\myput{2352}{367}{5}{-2.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[2438 3710 2438 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-1.5) 2914 3873 0  0.00 [2914 3773 172 99] Show
%Latex:\myput{2914}{367}{5}{-1.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3000 3710 3000 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-1.0) 3477 3873 0  0.00 [3477 3773 172 99] Show
%Latex:\myput{3477}{367}{5}{-1.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[3563 3710 3563 3773 
] dogrey 
32 Setcolor
32 Setcolor
(-0.5) 4039 3873 0  0.00 [4039 3773 172 99] Show
%Latex:\myput{4039}{367}{5}{-0.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4125 3710 4125 3773 
] dogrey 
32 Setcolor
32 Setcolor
(0.0) 4619 3873 0  0.00 [4619 3773 139 99] Show
%Latex:\myput{4619}{367}{5}{0.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[4688 3710 4688 3773 
] dogrey 
32 Setcolor
32 Setcolor
(0.5) 5181 3873 0  0.00 [5181 3773 139 99] Show
%Latex:\myput{5181}{367}{5}{0.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1031 3710 1031 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1313 3710 1313 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1594 3710 1594 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[1875 3710 1875 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2156 3710 2156 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2438 3710 2438 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[2719 3710 2719 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3710 3000 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3281 3710 3281 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3563 3710 3563 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[3844 3710 3844 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4125 3710 4125 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4406 3710 4406 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4688 3710 4688 3757 
] dogrey 
 (drawsegs) 4 [ 32]
[4969 3710 4969 3757 
] dogrey 
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(-2.0) 506 3748 0  0.00 [506 3648 172 99] Show
%Latex:\myput{506}{492}{5}{-2.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
32 Setcolor
32 Setcolor
(-1.5) 506 3351 0  0.00 [506 3251 172 99] Show
%Latex:\myput{506}{889}{5}{-1.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3313 690 3313 
] dogrey 
32 Setcolor
32 Setcolor
(-1.0) 506 2953 0  0.00 [506 2853 172 99] Show
%Latex:\myput{506}{1287}{5}{-1.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2915 690 2915 
] dogrey 
32 Setcolor
32 Setcolor
(-0.5) 506 2556 0  0.00 [506 2456 172 99] Show
%Latex:\myput{506}{1684}{5}{-0.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2518 690 2518 
] dogrey 
32 Setcolor
32 Setcolor
(0.0) 539 2158 0  0.00 [539 2058 139 99] Show
%Latex:\myput{539}{2082}{5}{0.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 2120 690 2120 
] dogrey 
32 Setcolor
32 Setcolor
(0.5) 539 1761 0  0.00 [539 1661 139 99] Show
%Latex:\myput{539}{2479}{5}{0.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1723 690 1723 
] dogrey 
32 Setcolor
32 Setcolor
(1.0) 539 1363 0  0.00 [539 1263 139 99] Show
%Latex:\myput{539}{2877}{5}{1.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 1325 690 1325 
] dogrey 
32 Setcolor
32 Setcolor
(1.5) 539 966 0  0.00 [539 866 139 99] Show
%Latex:\myput{539}{3274}{5}{1.5}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 928 690 928 
] dogrey 
32 Setcolor
32 Setcolor
(2.0) 539 568 0  0.00 [539 468 139 99] Show
%Latex:\myput{539}{3672}{5}{2.0}
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 705 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3511 705 3511 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3313 705 3313 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3114 705 3114 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2915 705 2915 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2716 705 2716 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2518 705 2518 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2319 705 2319 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2120 705 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1921 705 1921 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1723 705 1723 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1524 705 1524 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1325 705 1325 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1126 705 1126 
] dogrey 
 (drawsegs) 4 [ 32]
[750 928 705 928 
] dogrey 
 (drawsegs) 4 [ 32]
[750 729 705 729 
] dogrey 
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 5250 3710 
] dogrey 
32 Setcolor
32 Setcolor
 (drawsegs) 4 [ 32]
[750 3710 750 530 
] dogrey 
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
[] 0 setdash
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Nyquist plot ) 2724 292 0  0.00 [2724 192 550 99] Show
%Latex:\myput{2724}{3948}{5}{Nyquist plot }
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Re\(h\(2i*pi*f\)\)) 2712 4063 0  0.00 [2712 3963 577 99] Show
%Latex:\myput{2712}{177}{5}{Re(h(2i*pi*f))}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
32 Setcolor
(Im\(h\(2i*pi*f\)\)) 442 2379 0 270.00 [442 2279 561 99] Show
%Latex:\myput{442}{1861}{5}{Im(h(2i*pi*f))}
32 Setcolor
/Helvetica findfont 100 scf mul scalefont setfont
%Latex:\end{picture}
 showpage

 end saved restore 


